basePath: /api/v1
definitions:
  models.MenuItem:
    properties:
      category:
        type: string
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      id:
        type: integer
      is_available:
        type: boolean
      name:
        type: string
      price:
        type: number
      price_history:
        items:
          $ref: '#/definitions/models.PriceHistory'
        type: array
      restaurant:
        $ref: '#/definitions/models.Restaurant'
      restaurant_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.PriceHistory:
    properties:
      id:
        type: integer
      menu_item:
        $ref: '#/definitions/models.MenuItem'
      menu_item_id:
        type: integer
      price:
        type: number
      recorded_at:
        type: string
    type: object
  models.Restaurant:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      cuisine_type:
        type: string
      external_id:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      menu_items:
        items:
          $ref: '#/definitions/models.MenuItem'
        type: array
      name:
        type: string
      phone:
        type: string
      price_range:
        type: string
      rating:
        type: number
      state:
        type: string
      updated_at:
        type: string
      website:
        type: string
      zip_code:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@cheapeats.com
    name: API Support
  description: API for fetching and tracking restaurant prices
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: CheapEats API
  version: "1.0"
paths:
  /menu-items/{itemId}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific menu item including price
        history
      parameters:
      - description: Menu Item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MenuItem'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get menu item by ID
      tags:
      - menu-items
  /menu-items/{itemId}/price-history:
    get:
      consumes:
      - application/json
      description: Get the price history of a specific menu item
      parameters:
      - description: Menu Item ID
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PriceHistory'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get price history for menu item
      tags:
      - menu-items
  /restaurants:
    get:
      consumes:
      - application/json
      description: Get a list of all restaurants with optional filters
      parameters:
      - description: Filter by city
        in: query
        name: city
        type: string
      - description: Filter by cuisine type
        in: query
        name: cuisine
        type: string
      - description: Filter by price range (e.g., $, $$, $$$, $$$$)
        in: query
        name: price_range
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Restaurant'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all restaurants
      tags:
      - restaurants
  /restaurants/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific restaurant including
        menu items
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Restaurant'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get restaurant by ID
      tags:
      - restaurants
  /restaurants/{id}/menu:
    get:
      consumes:
      - application/json
      description: Get all menu items for a specific restaurant
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: integer
      - description: Filter by category
        in: query
        name: category
        type: string
      - description: Maximum price filter
        in: query
        name: max_price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MenuItem'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get restaurant menu items
      tags:
      - restaurants
  /restaurants/search:
    get:
      consumes:
      - application/json
      description: Search for restaurants within a radius of given coordinates
      parameters:
      - description: Latitude
        in: query
        name: lat
        required: true
        type: number
      - description: Longitude
        in: query
        name: lng
        required: true
        type: number
      - description: 'Search radius in meters (default: 1000)'
        in: query
        name: radius
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Restaurant'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search nearby restaurants
      tags:
      - restaurants
schemes:
- http
- https
swagger: "2.0"
